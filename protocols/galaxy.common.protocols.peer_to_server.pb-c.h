/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: galaxy.common.protocols.peer_to_server.proto */

#ifndef PROTOBUF_C_galaxy_2ecommon_2eprotocols_2epeer_5fto_5fserver_2eproto__INCLUDED
#define PROTOBUF_C_galaxy_2ecommon_2eprotocols_2epeer_5fto_5fserver_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "galaxy.common.protocols.peer_common.pb-c.h"

typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyMetadata Galaxy__Common__Protocols__PeerToServer__LobbyMetadata;
typedef struct Galaxy__Common__Protocols__PeerToServer__NetworkAddress Galaxy__Common__Protocols__PeerToServer__NetworkAddress;
typedef struct Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo;
typedef struct Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest;
typedef struct Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse;
typedef struct Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest;
typedef struct Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties;
typedef struct Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote;
typedef struct Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport;
typedef struct Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyMessage Galaxy__Common__Protocols__PeerToServer__LobbyMessage;
typedef struct Galaxy__Common__Protocols__PeerToServer__MemberInfo Galaxy__Common__Protocols__PeerToServer__MemberInfo;
typedef struct Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics;
typedef struct Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember;


/* --- enums --- */

typedef enum _Galaxy__Common__Protocols__PeerToServer__MessageType {
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__UNKNOWN_MESSAGE = 0,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__CREATE_LOBBY_REQUEST = 1,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__CREATE_LOBBY_RESPONSE = 2,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__JOIN_LOBBY_REQUEST = 3,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__JOIN_LOBBY_RESPONSE = 4,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__LOBBY_ENTERED_NOTIFICATION = 5,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__MEMBER_JOINED_NOTIFICATION = 6,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__MEMBER_LEFT_NOTIFICATION = 7,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__NEW_LOBBY_OWNER_VOTE = 8,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__NEW_LOBBY_OWNER_NOTIFICATION = 9,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__PEER_CONNECTION_STATE_REPORT = 10,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__LEAVE_LOBBY_NOTIFICATION = 11,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__LOBBY_LEFT_NOTIFICATION = 12,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__LOBBY_PROPERTIES_NOTIFICATION = 13,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__LOBBY_MEMBER_PROPERTIES_NOTIFICATION = 14,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__LOBBY_MESSAGE = 15,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__MEMBER_INFO = 16,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE__CUSTOM_PROXYING_PACKET = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MESSAGE_TYPE)
} Galaxy__Common__Protocols__PeerToServer__MessageType;
typedef enum _Galaxy__Common__Protocols__PeerToServer__LobbyTopologyType {
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__DEPRECATED_LOBBY_TOPOLOGY_TYPE_FCM_HOST_MIGRATION = 0,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__LOBBY_TOPOLOGY_TYPE_FCM = 1,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__LOBBY_TOPOLOGY_TYPE_STAR = 2,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__LOBBY_TOPOLOGY_TYPE_CONNECTIONLESS = 3,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__LOBBY_TOPOLOGY_TYPE_FCM_OWNERSHIP_TRANSITION = 4,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__LOBBY_TOPOLOGY_TYPE_CONNECTIONLESS_P2P_PROXYING = 5,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__LOBBY_TOPOLOGY_TYPE_CONNECTIONLESS_P2P_PROXYING_OWNERSHIP_TRANSITION = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE)
} Galaxy__Common__Protocols__PeerToServer__LobbyTopologyType;
typedef enum _Galaxy__Common__Protocols__PeerToServer__LobbyLeaveReason {
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON__LOBBY_LEAVE_REASON_UNSPECIFIED = 0,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON__LOBBY_LEAVE_REASON_LOBBY_CLOSED = 1,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON__LOBBY_LEAVE_REASON_MEMBER_QUITTED = 2,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON__LOBBY_LEAVE_REASON_CONNECTIVITY_ISSUES = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON)
} Galaxy__Common__Protocols__PeerToServer__LobbyLeaveReason;
typedef enum _Galaxy__Common__Protocols__PeerToServer__PeerType {
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_DESKTOP = 0,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_PS4 = 1,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_XBOX = 2,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_UWP = 3,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_IOS = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE)
} Galaxy__Common__Protocols__PeerToServer__PeerType;
typedef enum _Galaxy__Common__Protocols__PeerToServer__ConnectionStateChange {
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CONNECTION_STATE_CHANGE__CONNECTION_STATE_ESTABLISHED = 0,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CONNECTION_STATE_CHANGE__CONNECTION_STATE_CLOSED = 1,
  GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CONNECTION_STATE_CHANGE__CONNECTION_STATE_LOST = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CONNECTION_STATE_CHANGE)
} Galaxy__Common__Protocols__PeerToServer__ConnectionStateChange;

/* --- messages --- */

struct  Galaxy__Common__Protocols__PeerToServer__LobbyMetadata
{
  ProtobufCMessage base;
  protobuf_c_boolean has_member_max_count;
  uint32_t member_max_count;
  protobuf_c_boolean has_lobby_type;
  uint32_t lobby_type;
  protobuf_c_boolean has_joinable;
  uint32_t joinable;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_metadata__descriptor) \
, 0, 0, 0, 0, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__NetworkAddress
{
  ProtobufCMessage base;
  char *host;
  protobuf_c_boolean has_port;
  uint32_t port;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__NETWORK_ADDRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__network_address__descriptor) \
, NULL, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
  protobuf_c_boolean has_nat_type;
  uint32_t nat_type;
  char *public_key;
  Galaxy__Common__Protocols__PeerToServer__NetworkAddress *address;
  protobuf_c_boolean has_direct_connections_allowed;
  protobuf_c_boolean direct_connections_allowed;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__GALAXY_LOBBY_MEMBER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__descriptor) \
, 0, 0, 0, 0, 0, 0, NULL, NULL, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_nat_type;
  uint32_t nat_type;
  protobuf_c_boolean has_topology_type;
  Galaxy__Common__Protocols__PeerToServer__LobbyTopologyType topology_type;
  Galaxy__Common__Protocols__PeerToServer__LobbyMetadata *metadata;
  protobuf_c_boolean has_peer_type;
  Galaxy__Common__Protocols__PeerToServer__PeerType peer_type;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CREATE_LOBBY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__create_lobby_request__descriptor) \
, 0, 0, 0, 0, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__DEPRECATED_LOBBY_TOPOLOGY_TYPE_FCM_HOST_MIGRATION, NULL, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_DESKTOP }


struct  Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CREATE_LOBBY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__create_lobby_response__descriptor) \
, 0, 0, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_nat_type;
  uint32_t nat_type;
  protobuf_c_boolean has_peer_type;
  Galaxy__Common__Protocols__PeerToServer__PeerType peer_type;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__JOIN_LOBBY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__join_lobby_request__descriptor) \
, 0, 0, 0, 0, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_TYPE__PEER_TYPE_DESKTOP }


struct  Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
  size_t n_galaxy_member_infos;
  Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo **galaxy_member_infos;
  size_t n_joining_galaxy_member_infos;
  Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo **joining_galaxy_member_infos;
  protobuf_c_boolean has_topology_type;
  Galaxy__Common__Protocols__PeerToServer__LobbyTopologyType topology_type;
  protobuf_c_boolean has_owner_id;
  uint64_t owner_id;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__JOIN_LOBBY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__join_lobby_response__descriptor) \
, 0, 0, 0, 0, 0,NULL, 0,NULL, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_TOPOLOGY_TYPE__DEPRECATED_LOBBY_TOPOLOGY_TYPE_FCM_HOST_MIGRATION, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties
{
  ProtobufCMessage base;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties *properties;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_ENTERED_NOTIFICATION__MEMBER_PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_entered_notification__member_properties__descriptor) \
, 0, 0, NULL }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_owner_id;
  uint64_t owner_id;
  Galaxy__Common__Protocols__PeerToServer__LobbyMetadata *metadata;
  size_t n_properties;
  Galaxy__Common__Protocols__PeerCommon__Property **properties;
  size_t n_members;
  Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties **members;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_ENTERED_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_entered_notification__descriptor) \
, 0, 0, 0, 0, NULL, 0,NULL, 0,NULL }


struct  Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo *galaxy_member_info;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MEMBER_JOINED_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__member_joined_notification__descriptor) \
, 0, 0, NULL }


struct  Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  protobuf_c_boolean has_leave_reason;
  Galaxy__Common__Protocols__PeerToServer__LobbyLeaveReason leave_reason;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MEMBER_LEFT_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__member_left_notification__descriptor) \
, 0, 0, 0, 0, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON__LOBBY_LEAVE_REASON_UNSPECIFIED }


struct  Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__NEW_LOBBY_OWNER_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__descriptor) \
, 0, 0, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_new_owner_id;
  uint64_t new_owner_id;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__NEW_LOBBY_OWNER_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__descriptor) \
, 0, 0, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  protobuf_c_boolean has_state_change;
  Galaxy__Common__Protocols__PeerToServer__ConnectionStateChange state_change;
  char *public_key;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__PEER_CONNECTION_STATE_CHANGE_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__descriptor) \
, 0, 0, 0, 0, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CONNECTION_STATE_CHANGE__CONNECTION_STATE_ESTABLISHED, NULL }


struct  Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LEAVE_LOBBY_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__leave_lobby_notification__descriptor) \
, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_leave_reason;
  Galaxy__Common__Protocols__PeerToServer__LobbyLeaveReason leave_reason;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEFT_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_left_notification__descriptor) \
, 0, 0, 0, GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_LEAVE_REASON__LOBBY_LEAVE_REASON_UNSPECIFIED }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  Galaxy__Common__Protocols__PeerToServer__LobbyMetadata *metadata;
  size_t n_properties;
  Galaxy__Common__Protocols__PeerCommon__Property **properties;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_PROPERTIES_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_properties_notification__descriptor) \
, 0, 0, NULL, 0,NULL }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  size_t n_properties;
  Galaxy__Common__Protocols__PeerCommon__Property **properties;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_MEMBER_PROPERTIES_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__descriptor) \
, 0, 0, 0, 0, 0,NULL }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  char *data;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_message__descriptor) \
, 0, 0, 0, 0, NULL }


struct  Galaxy__Common__Protocols__PeerToServer__MemberInfo
{
  ProtobufCMessage base;
  char *sdk_version;
  char *client_id;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__MEMBER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__member_info__descriptor) \
, NULL, NULL }


struct  Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel;
  uint32_t channel;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_receiver_id;
  uint64_t receiver_id;
  protobuf_c_boolean has_sender_id;
  uint64_t sender_id;
  protobuf_c_boolean has_seq;
  uint32_t seq;
  char *data;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__CUSTOM_PROXYING_PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__custom_proxying_packet__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember
{
  ProtobufCMessage base;
  protobuf_c_boolean has_member_id;
  uint64_t member_id;
  protobuf_c_boolean has_ping;
  uint32_t ping;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_PING_STATISTICS__PINGS_TO_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_ping_statistics__pings_to_member__descriptor) \
, 0, 0, 0, 0 }


struct  Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember *pings_to_member;
};
#define GALAXY__COMMON__PROTOCOLS__PEER_TO_SERVER__LOBBY_PING_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__common__protocols__peer_to_server__lobby_ping_statistics__descriptor) \
, 0, 0, NULL }


/* Galaxy__Common__Protocols__PeerToServer__LobbyMetadata methods */
void   galaxy__common__protocols__peer_to_server__lobby_metadata__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyMetadata         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_metadata__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMetadata   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_metadata__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMetadata   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_metadata__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMetadata   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyMetadata *
       galaxy__common__protocols__peer_to_server__lobby_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_metadata__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyMetadata *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__NetworkAddress methods */
void   galaxy__common__protocols__peer_to_server__network_address__init
                     (Galaxy__Common__Protocols__PeerToServer__NetworkAddress         *message);
size_t galaxy__common__protocols__peer_to_server__network_address__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__NetworkAddress   *message);
size_t galaxy__common__protocols__peer_to_server__network_address__pack
                     (const Galaxy__Common__Protocols__PeerToServer__NetworkAddress   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__network_address__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__NetworkAddress   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__NetworkAddress *
       galaxy__common__protocols__peer_to_server__network_address__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__network_address__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__NetworkAddress *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo methods */
void   galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__init
                     (Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo         *message);
size_t galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo   *message);
size_t galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__pack
                     (const Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo *
       galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest methods */
void   galaxy__common__protocols__peer_to_server__create_lobby_request__init
                     (Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest         *message);
size_t galaxy__common__protocols__peer_to_server__create_lobby_request__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest   *message);
size_t galaxy__common__protocols__peer_to_server__create_lobby_request__pack
                     (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__create_lobby_request__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest *
       galaxy__common__protocols__peer_to_server__create_lobby_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__create_lobby_request__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse methods */
void   galaxy__common__protocols__peer_to_server__create_lobby_response__init
                     (Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse         *message);
size_t galaxy__common__protocols__peer_to_server__create_lobby_response__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse   *message);
size_t galaxy__common__protocols__peer_to_server__create_lobby_response__pack
                     (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__create_lobby_response__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse *
       galaxy__common__protocols__peer_to_server__create_lobby_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__create_lobby_response__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest methods */
void   galaxy__common__protocols__peer_to_server__join_lobby_request__init
                     (Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest         *message);
size_t galaxy__common__protocols__peer_to_server__join_lobby_request__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest   *message);
size_t galaxy__common__protocols__peer_to_server__join_lobby_request__pack
                     (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__join_lobby_request__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest *
       galaxy__common__protocols__peer_to_server__join_lobby_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__join_lobby_request__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse methods */
void   galaxy__common__protocols__peer_to_server__join_lobby_response__init
                     (Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse         *message);
size_t galaxy__common__protocols__peer_to_server__join_lobby_response__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse   *message);
size_t galaxy__common__protocols__peer_to_server__join_lobby_response__pack
                     (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__join_lobby_response__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse *
       galaxy__common__protocols__peer_to_server__join_lobby_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__join_lobby_response__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties methods */
void   galaxy__common__protocols__peer_to_server__lobby_entered_notification__member_properties__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties         *message);
/* Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification methods */
void   galaxy__common__protocols__peer_to_server__lobby_entered_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_entered_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_entered_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_entered_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification *
       galaxy__common__protocols__peer_to_server__lobby_entered_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_entered_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification methods */
void   galaxy__common__protocols__peer_to_server__member_joined_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification         *message);
size_t galaxy__common__protocols__peer_to_server__member_joined_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification   *message);
size_t galaxy__common__protocols__peer_to_server__member_joined_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__member_joined_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification *
       galaxy__common__protocols__peer_to_server__member_joined_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__member_joined_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification methods */
void   galaxy__common__protocols__peer_to_server__member_left_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification         *message);
size_t galaxy__common__protocols__peer_to_server__member_left_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification   *message);
size_t galaxy__common__protocols__peer_to_server__member_left_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__member_left_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification *
       galaxy__common__protocols__peer_to_server__member_left_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__member_left_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote methods */
void   galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__init
                     (Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote         *message);
size_t galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote   *message);
size_t galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__pack
                     (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote *
       galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification methods */
void   galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification         *message);
size_t galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification   *message);
size_t galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification *
       galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport methods */
void   galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__init
                     (Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport         *message);
size_t galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport   *message);
size_t galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__pack
                     (const Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport *
       galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification methods */
void   galaxy__common__protocols__peer_to_server__leave_lobby_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification         *message);
size_t galaxy__common__protocols__peer_to_server__leave_lobby_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification   *message);
size_t galaxy__common__protocols__peer_to_server__leave_lobby_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__leave_lobby_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification *
       galaxy__common__protocols__peer_to_server__leave_lobby_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__leave_lobby_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification methods */
void   galaxy__common__protocols__peer_to_server__lobby_left_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_left_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_left_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_left_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification *
       galaxy__common__protocols__peer_to_server__lobby_left_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_left_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification methods */
void   galaxy__common__protocols__peer_to_server__lobby_properties_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_properties_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_properties_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_properties_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification *
       galaxy__common__protocols__peer_to_server__lobby_properties_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_properties_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification methods */
void   galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification *
       galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LobbyMessage methods */
void   galaxy__common__protocols__peer_to_server__lobby_message__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyMessage         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_message__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMessage   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_message__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMessage   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_message__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyMessage   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyMessage *
       galaxy__common__protocols__peer_to_server__lobby_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_message__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyMessage *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__MemberInfo methods */
void   galaxy__common__protocols__peer_to_server__member_info__init
                     (Galaxy__Common__Protocols__PeerToServer__MemberInfo         *message);
size_t galaxy__common__protocols__peer_to_server__member_info__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__MemberInfo   *message);
size_t galaxy__common__protocols__peer_to_server__member_info__pack
                     (const Galaxy__Common__Protocols__PeerToServer__MemberInfo   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__member_info__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__MemberInfo   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__MemberInfo *
       galaxy__common__protocols__peer_to_server__member_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__member_info__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__MemberInfo *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket methods */
void   galaxy__common__protocols__peer_to_server__custom_proxying_packet__init
                     (Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket         *message);
size_t galaxy__common__protocols__peer_to_server__custom_proxying_packet__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket   *message);
size_t galaxy__common__protocols__peer_to_server__custom_proxying_packet__pack
                     (const Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__custom_proxying_packet__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket *
       galaxy__common__protocols__peer_to_server__custom_proxying_packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__custom_proxying_packet__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember methods */
void   galaxy__common__protocols__peer_to_server__lobby_ping_statistics__pings_to_member__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember         *message);
/* Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics methods */
void   galaxy__common__protocols__peer_to_server__lobby_ping_statistics__init
                     (Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics         *message);
size_t galaxy__common__protocols__peer_to_server__lobby_ping_statistics__get_packed_size
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics   *message);
size_t galaxy__common__protocols__peer_to_server__lobby_ping_statistics__pack
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics   *message,
                      uint8_t             *out);
size_t galaxy__common__protocols__peer_to_server__lobby_ping_statistics__pack_to_buffer
                     (const Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics *
       galaxy__common__protocols__peer_to_server__lobby_ping_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__common__protocols__peer_to_server__lobby_ping_statistics__free_unpacked
                     (Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyMetadata_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyMetadata *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__NetworkAddress_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__NetworkAddress *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__GalaxyLobbyMemberInfo *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__CreateLobbyResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__JoinLobbyResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification__MemberProperties *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyEnteredNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__MemberJoinedNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__MemberLeftNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerVote *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__NewLobbyOwnerNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__PeerConnectionStateChangeReport *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LeaveLobbyNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyLeftNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyPropertiesNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyMemberPropertiesNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyMessage_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyMessage *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__MemberInfo_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__MemberInfo *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__CustomProxyingPacket *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics__PingsToMember *message,
                  void *closure_data);
typedef void (*Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics_Closure)
                 (const Galaxy__Common__Protocols__PeerToServer__LobbyPingStatistics *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    galaxy__common__protocols__peer_to_server__message_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__common__protocols__peer_to_server__lobby_topology_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__common__protocols__peer_to_server__lobby_leave_reason__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__common__protocols__peer_to_server__peer_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__common__protocols__peer_to_server__connection_state_change__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_metadata__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__network_address__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__galaxy_lobby_member_info__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__create_lobby_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__create_lobby_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__join_lobby_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__join_lobby_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_entered_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_entered_notification__member_properties__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__member_joined_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__member_left_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__new_lobby_owner_vote__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__new_lobby_owner_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__peer_connection_state_change_report__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__leave_lobby_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_left_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_properties_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_member_properties_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_message__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__member_info__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__custom_proxying_packet__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_ping_statistics__descriptor;
extern const ProtobufCMessageDescriptor galaxy__common__protocols__peer_to_server__lobby_ping_statistics__pings_to_member__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_galaxy_2ecommon_2eprotocols_2epeer_5fto_5fserver_2eproto__INCLUDED */
