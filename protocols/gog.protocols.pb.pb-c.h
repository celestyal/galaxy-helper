/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gog.protocols.pb.proto */

#ifndef PROTOBUF_C_gog_2eprotocols_2epb_2eproto__INCLUDED
#define PROTOBUF_C_gog_2eprotocols_2epb_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Gog__Protocols__Pb__Header Gog__Protocols__Pb__Header;
typedef struct Gog__Protocols__Pb__Response Gog__Protocols__Pb__Response;


/* --- enums --- */

typedef enum _Gog__Protocols__Pb__Response__Status {
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__UNKNOWN_RESPONSE = 0,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__OK = 200,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__ACCEPTED = 202,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__BAD_REQUEST = 400,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__UNAUTHORIZED = 401,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__FORBIDDEN = 403,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__NOT_FOUND = 404,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__CONFLICT = 409,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__INTERNAL_ERROR = 500,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__NOT_IMPLEMENTED = 501,
  GOG__PROTOCOLS__PB__RESPONSE__STATUS__UNAVAILABLE = 503
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GOG__PROTOCOLS__PB__RESPONSE__STATUS)
} Gog__Protocols__Pb__Response__Status;

/* --- messages --- */

/*
 **
 * Header used for all Galaxy messages.
 */
struct  Gog__Protocols__Pb__Header
{
  ProtobufCMessage base;
  /*
   * Subprotocol
   */
  uint32_t sort;
  /*
   * Message type
   */
  uint32_t type;
  /*
   * Payload size
   */
  protobuf_c_boolean has_size;
  uint32_t size;
  /*
   * Sequence number
   */
  protobuf_c_boolean has_oseq;
  uint32_t oseq;
};
#define GOG__PROTOCOLS__PB__HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gog__protocols__pb__header__descriptor) \
, 0, 0, 0, 0u, 0, 0 }


/*
 **
 * Header extensions for response messages. Not instanciated on its own, only
 * provides extension IDs for the Header message.
 */
struct  Gog__Protocols__Pb__Response
{
  ProtobufCMessage base;
};
#define GOG__PROTOCOLS__PB__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gog__protocols__pb__response__descriptor) \
 }


/* Gog__Protocols__Pb__Header methods */
void   gog__protocols__pb__header__init
                     (Gog__Protocols__Pb__Header         *message);
size_t gog__protocols__pb__header__get_packed_size
                     (const Gog__Protocols__Pb__Header   *message);
size_t gog__protocols__pb__header__pack
                     (const Gog__Protocols__Pb__Header   *message,
                      uint8_t             *out);
size_t gog__protocols__pb__header__pack_to_buffer
                     (const Gog__Protocols__Pb__Header   *message,
                      ProtobufCBuffer     *buffer);
Gog__Protocols__Pb__Header *
       gog__protocols__pb__header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gog__protocols__pb__header__free_unpacked
                     (Gog__Protocols__Pb__Header *message,
                      ProtobufCAllocator *allocator);
/* Gog__Protocols__Pb__Response methods */
void   gog__protocols__pb__response__init
                     (Gog__Protocols__Pb__Response         *message);
size_t gog__protocols__pb__response__get_packed_size
                     (const Gog__Protocols__Pb__Response   *message);
size_t gog__protocols__pb__response__pack
                     (const Gog__Protocols__Pb__Response   *message,
                      uint8_t             *out);
size_t gog__protocols__pb__response__pack_to_buffer
                     (const Gog__Protocols__Pb__Response   *message,
                      ProtobufCBuffer     *buffer);
Gog__Protocols__Pb__Response *
       gog__protocols__pb__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gog__protocols__pb__response__free_unpacked
                     (Gog__Protocols__Pb__Response *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Gog__Protocols__Pb__Header_Closure)
                 (const Gog__Protocols__Pb__Header *message,
                  void *closure_data);
typedef void (*Gog__Protocols__Pb__Response_Closure)
                 (const Gog__Protocols__Pb__Response *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor gog__protocols__pb__header__descriptor;
extern const ProtobufCMessageDescriptor gog__protocols__pb__response__descriptor;
extern const ProtobufCEnumDescriptor    gog__protocols__pb__response__status__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gog_2eprotocols_2epb_2eproto__INCLUDED */
