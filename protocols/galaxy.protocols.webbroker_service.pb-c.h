/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: galaxy.protocols.webbroker_service.proto */

#ifndef PROTOBUF_C_galaxy_2eprotocols_2ewebbroker_5fservice_2eproto__INCLUDED
#define PROTOBUF_C_galaxy_2eprotocols_2ewebbroker_5fservice_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Galaxy__Protocols__WebbrokerService__AuthRequest Galaxy__Protocols__WebbrokerService__AuthRequest;
typedef struct Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest;
typedef struct Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse;
typedef struct Galaxy__Protocols__WebbrokerService__MessageFromTopic Galaxy__Protocols__WebbrokerService__MessageFromTopic;


/* --- enums --- */

typedef enum _Galaxy__Protocols__WebbrokerService__MessageSort {
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_SORT__MESSAGE_SORT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_SORT)
} Galaxy__Protocols__WebbrokerService__MessageSort;
typedef enum _Galaxy__Protocols__WebbrokerService__MessageType {
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE__UNKNOWN_MESSAGE = 0,
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE__AUTH_REQUEST = 1,
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE__AUTH_RESPONSE = 2,
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE__SUBSCRIBE_TOPIC_REQUEST = 3,
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE__SUBSCRIBE_TOPIC_RESPONSE = 4,
  GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE__MESSAGE_FROM_TOPIC = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_TYPE)
} Galaxy__Protocols__WebbrokerService__MessageType;

/* --- messages --- */

struct  Galaxy__Protocols__WebbrokerService__AuthRequest
{
  ProtobufCMessage base;
  char *auth_token;
};
#define GALAXY__PROTOCOLS__WEBBROKER_SERVICE__AUTH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__webbroker_service__auth_request__descriptor) \
, NULL }


struct  Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest
{
  ProtobufCMessage base;
  char *topic;
};
#define GALAXY__PROTOCOLS__WEBBROKER_SERVICE__SUBSCRIBE_TOPIC_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__webbroker_service__subscribe_topic_request__descriptor) \
, NULL }


struct  Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse
{
  ProtobufCMessage base;
  char *topic;
};
#define GALAXY__PROTOCOLS__WEBBROKER_SERVICE__SUBSCRIBE_TOPIC_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__webbroker_service__subscribe_topic_response__descriptor) \
, NULL }


struct  Galaxy__Protocols__WebbrokerService__MessageFromTopic
{
  ProtobufCMessage base;
  char *topic;
  char *content;
  protobuf_c_boolean has_id;
  uint64_t id;
};
#define GALAXY__PROTOCOLS__WEBBROKER_SERVICE__MESSAGE_FROM_TOPIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__webbroker_service__message_from_topic__descriptor) \
, NULL, NULL, 0, 0 }


/* Galaxy__Protocols__WebbrokerService__AuthRequest methods */
void   galaxy__protocols__webbroker_service__auth_request__init
                     (Galaxy__Protocols__WebbrokerService__AuthRequest         *message);
size_t galaxy__protocols__webbroker_service__auth_request__get_packed_size
                     (const Galaxy__Protocols__WebbrokerService__AuthRequest   *message);
size_t galaxy__protocols__webbroker_service__auth_request__pack
                     (const Galaxy__Protocols__WebbrokerService__AuthRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__webbroker_service__auth_request__pack_to_buffer
                     (const Galaxy__Protocols__WebbrokerService__AuthRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__WebbrokerService__AuthRequest *
       galaxy__protocols__webbroker_service__auth_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__webbroker_service__auth_request__free_unpacked
                     (Galaxy__Protocols__WebbrokerService__AuthRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest methods */
void   galaxy__protocols__webbroker_service__subscribe_topic_request__init
                     (Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest         *message);
size_t galaxy__protocols__webbroker_service__subscribe_topic_request__get_packed_size
                     (const Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest   *message);
size_t galaxy__protocols__webbroker_service__subscribe_topic_request__pack
                     (const Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__webbroker_service__subscribe_topic_request__pack_to_buffer
                     (const Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest *
       galaxy__protocols__webbroker_service__subscribe_topic_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__webbroker_service__subscribe_topic_request__free_unpacked
                     (Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse methods */
void   galaxy__protocols__webbroker_service__subscribe_topic_response__init
                     (Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse         *message);
size_t galaxy__protocols__webbroker_service__subscribe_topic_response__get_packed_size
                     (const Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse   *message);
size_t galaxy__protocols__webbroker_service__subscribe_topic_response__pack
                     (const Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__webbroker_service__subscribe_topic_response__pack_to_buffer
                     (const Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse *
       galaxy__protocols__webbroker_service__subscribe_topic_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__webbroker_service__subscribe_topic_response__free_unpacked
                     (Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__WebbrokerService__MessageFromTopic methods */
void   galaxy__protocols__webbroker_service__message_from_topic__init
                     (Galaxy__Protocols__WebbrokerService__MessageFromTopic         *message);
size_t galaxy__protocols__webbroker_service__message_from_topic__get_packed_size
                     (const Galaxy__Protocols__WebbrokerService__MessageFromTopic   *message);
size_t galaxy__protocols__webbroker_service__message_from_topic__pack
                     (const Galaxy__Protocols__WebbrokerService__MessageFromTopic   *message,
                      uint8_t             *out);
size_t galaxy__protocols__webbroker_service__message_from_topic__pack_to_buffer
                     (const Galaxy__Protocols__WebbrokerService__MessageFromTopic   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__WebbrokerService__MessageFromTopic *
       galaxy__protocols__webbroker_service__message_from_topic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__webbroker_service__message_from_topic__free_unpacked
                     (Galaxy__Protocols__WebbrokerService__MessageFromTopic *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Galaxy__Protocols__WebbrokerService__AuthRequest_Closure)
                 (const Galaxy__Protocols__WebbrokerService__AuthRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest_Closure)
                 (const Galaxy__Protocols__WebbrokerService__SubscribeTopicRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse_Closure)
                 (const Galaxy__Protocols__WebbrokerService__SubscribeTopicResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__WebbrokerService__MessageFromTopic_Closure)
                 (const Galaxy__Protocols__WebbrokerService__MessageFromTopic *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    galaxy__protocols__webbroker_service__message_sort__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__webbroker_service__message_type__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__webbroker_service__auth_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__webbroker_service__subscribe_topic_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__webbroker_service__subscribe_topic_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__webbroker_service__message_from_topic__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_galaxy_2eprotocols_2ewebbroker_5fservice_2eproto__INCLUDED */
