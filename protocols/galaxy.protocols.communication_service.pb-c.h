/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: galaxy.protocols.communication_service.proto */

#ifndef PROTOBUF_C_galaxy_2eprotocols_2ecommunication_5fservice_2eproto__INCLUDED
#define PROTOBUF_C_galaxy_2eprotocols_2ecommunication_5fservice_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Galaxy__Protocols__CommunicationService__LibraryInfoRequest Galaxy__Protocols__CommunicationService__LibraryInfoRequest;
typedef struct Galaxy__Protocols__CommunicationService__LibraryInfoResponse Galaxy__Protocols__CommunicationService__LibraryInfoResponse;
typedef struct Galaxy__Protocols__CommunicationService__AuthInfoRequest Galaxy__Protocols__CommunicationService__AuthInfoRequest;
typedef struct Galaxy__Protocols__CommunicationService__AuthInfoResponse Galaxy__Protocols__CommunicationService__AuthInfoResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetUserStatsRequest Galaxy__Protocols__CommunicationService__GetUserStatsRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetUserStatsResponse Galaxy__Protocols__CommunicationService__GetUserStatsResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat;
typedef struct Galaxy__Protocols__CommunicationService__UpdateUserStatRequest Galaxy__Protocols__CommunicationService__UpdateUserStatRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat;
typedef struct Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement;
typedef struct Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest;
typedef struct Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry;
typedef struct Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest;
typedef struct Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse;
typedef struct Galaxy__Protocols__CommunicationService__AuthStateChangeNotification Galaxy__Protocols__CommunicationService__AuthStateChangeNotification;
typedef struct Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest;
typedef struct Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest;
typedef struct Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse;
typedef struct Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest;
typedef struct Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse;
typedef struct Galaxy__Protocols__CommunicationService__ShareFileRequest Galaxy__Protocols__CommunicationService__ShareFileRequest;
typedef struct Galaxy__Protocols__CommunicationService__ShareFileResponse Galaxy__Protocols__CommunicationService__ShareFileResponse;
typedef struct Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest;
typedef struct Galaxy__Protocols__CommunicationService__StartGameSessionRequest Galaxy__Protocols__CommunicationService__StartGameSessionRequest;
typedef struct Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest;
typedef struct Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation;
typedef struct Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification;
typedef struct Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification;
typedef struct Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification;
typedef struct Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails;
typedef struct Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails;
typedef struct Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest;
typedef struct Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification;
typedef struct Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest;


/* --- enums --- */

typedef enum _Galaxy__Protocols__CommunicationService__StartGameSessionRequest__OverlaySupport {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_GAME_SESSION_REQUEST__OVERLAY_SUPPORT__OVERLAY_SUPPORT_NOT_AVAILABLE = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_GAME_SESSION_REQUEST__OVERLAY_SUPPORT__OVERLAY_SUPPORT_DISABLED = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_GAME_SESSION_REQUEST__OVERLAY_SUPPORT__OVERLAY_SUPPORT_ENABLED = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_GAME_SESSION_REQUEST__OVERLAY_SUPPORT)
} Galaxy__Protocols__CommunicationService__StartGameSessionRequest__OverlaySupport;
typedef enum _Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__FailureReason {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON__FAILURE_REASON_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON__FAILURE_REASON_CONFLICT = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON__FAILURE_REASON_ABORTED = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON__FAILURE_REASON_QUOTA_EXCEEDED = 3,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON__FAILURE_REASON_NO_DISC_SPACE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON)
} Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__FailureReason;
typedef enum _Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification__OverlayState {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__OVERLAY_STATE__OVERLAY_STATE_NOT_SUPPORTED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__OVERLAY_STATE__OVERLAY_STATE_DISABLED = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__OVERLAY_STATE__OVERLAY_STATE_FAILED_TO_INITIALIZE = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__OVERLAY_STATE__OVERLAY_STATE_INITIALIZED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__OVERLAY_STATE)
} Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification__OverlayState;
typedef enum _Galaxy__Protocols__CommunicationService__MessageSort {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_SORT__MESSAGE_SORT = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_SORT)
} Galaxy__Protocols__CommunicationService__MessageSort;
typedef enum _Galaxy__Protocols__CommunicationService__MessageType {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__UNKNOWN_MESSAGE = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__LIBRARY_INFO_REQUEST = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__LIBRARY_INFO_RESPONSE = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__AUTH_INFO_REQUEST = 3,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__AUTH_INFO_RESPONSE = 4,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_USER_STATS_REQUEST = 15,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_USER_STATS_RESPONSE = 16,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__UPDATE_USER_STAT_REQUEST = 17,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__UPDATE_USER_STAT_RESPONSE = 18,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__DELETE_USER_STATS_REQUEST = 19,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__DELETE_USER_STATS_RESPONSE = 20,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_GLOBAL_STATS_REQUEST = 21,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_GLOBAL_STATS_RESPONSE = 22,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_USER_ACHIEVEMENTS_REQUEST = 23,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_USER_ACHIEVEMENTS_RESPONSE = 24,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__UNLOCK_USER_ACHIEVEMENT_REQUEST = 25,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__UNLOCK_USER_ACHIEVEMENT_RESPONSE = 26,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__CLEAR_USER_ACHIEVEMENT_REQUEST = 27,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__CLEAR_USER_ACHIEVEMENT_RESPONSE = 28,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__DELETE_USER_ACHIEVEMENTS_REQUEST = 29,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__DELETE_USER_ACHIEVEMENTS_RESPONSE = 30,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARDS_REQUEST = 31,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARDS_RESPONSE = 32,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARD_ENTRIES_GLOBAL_REQUEST = 33,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARD_ENTRIES_AROUND_USER_REQUEST = 34,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARD_ENTRIES_FOR_USERS_REQUEST = 35,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARD_ENTRIES_RESPONSE = 36,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__SET_LEADERBOARD_SCORE_REQUEST = 37,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__SET_LEADERBOARD_SCORE_RESPONSE = 38,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__AUTH_STATE_CHANGE_NOTIFICATION = 39,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_LEADERBOARDS_BY_KEY_REQUEST = 40,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__CREATE_LEADERBOARD_REQUEST = 41,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__CREATE_LEADERBOARD_RESPONSE = 42,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_USER_TIME_PLAYED_REQUEST = 43,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__GET_USER_TIME_PLAYED_RESPONSE = 44,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__SHARE_FILE_REQUEST = 47,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__SHARE_FILE_RESPONSE = 48,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__START_OVERLAY_SESSION_REQUEST = 49,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__START_OVERLAY_SESSION_RESPONSE = 50,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__START_GAME_SESSION_REQUEST = 49,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__START_GAME_SESSION_RESPONSE = 50,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__START_STORAGE_SYNCHRONIZATION_REQUEST = 51,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__START_STORAGE_SYNCHRONIZATION_RESPONSE = 52,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__STORAGE_SYNCHRONIZATION_PROGRESS_NOTIFICATION = 53,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__STORAGE_SYNCHRONIZATION_SUCCESS_NOTIFICATION = 54,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION = 55,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__ABORT_STORAGE_SYNCHRONIZATION_REQUEST = 56,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__ABORT_STORAGE_SYNCHRONIZATION_RESPONSE = 57,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__OVERLAY_STATE_CHANGE_NOTIFICATION = 58,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__CONFIGURE_ENVIRONMENT_REQUEST = 59,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE__CONFIGURE_ENVIRONMENT_RESPONSE = 60
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__MESSAGE_TYPE)
} Galaxy__Protocols__CommunicationService__MessageType;
typedef enum _Galaxy__Protocols__CommunicationService__Bitness {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__BITNESS__BITNESS_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__BITNESS__BITNESS_32_BIT = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__BITNESS__BITNESS_64_BIT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__BITNESS)
} Galaxy__Protocols__CommunicationService__Bitness;
typedef enum _Galaxy__Protocols__CommunicationService__CompilerType {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__COMPILER_TYPE__COMPILER_TYPE_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__COMPILER_TYPE__COMPILER_TYPE_CLANG = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__COMPILER_TYPE__COMPILER_TYPE_GCC = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__COMPILER_TYPE__COMPILER_TYPE_MSVC = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__COMPILER_TYPE)
} Galaxy__Protocols__CommunicationService__CompilerType;
typedef enum _Galaxy__Protocols__CommunicationService__PlatformType {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__PLATFORM_TYPE__PLATFORM_TYPE_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__PLATFORM_TYPE__PLATFORM_TYPE_GALAXY = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__PLATFORM_TYPE__PLATFORM_TYPE_STEAM = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__PLATFORM_TYPE)
} Galaxy__Protocols__CommunicationService__PlatformType;
typedef enum _Galaxy__Protocols__CommunicationService__EnvironmentType {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ENVIRONMENT_TYPE__ENVIRONMENT_PRODUCTION = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ENVIRONMENT_TYPE__ENVIRONMENT_TEST = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ENVIRONMENT_TYPE__ENVIRONMENT_PREPROD = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ENVIRONMENT_TYPE)
} Galaxy__Protocols__CommunicationService__EnvironmentType;
typedef enum _Galaxy__Protocols__CommunicationService__Region {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__REGION__REGION_WORLD_WIDE = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__REGION__REGION_CHINA = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__REGION)
} Galaxy__Protocols__CommunicationService__Region;
typedef enum _Galaxy__Protocols__CommunicationService__UpdateStatus {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_STATUS__UNKNOWN_UPDATE_STATUS = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_STATUS__UPDATE_PENDING = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_STATUS__UPDATE_FAILED = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_STATUS__UPDATE_COMPLETE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_STATUS)
} Galaxy__Protocols__CommunicationService__UpdateStatus;
typedef enum _Galaxy__Protocols__CommunicationService__ValueType {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_INT = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_FLOAT = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_AVGRATE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE)
} Galaxy__Protocols__CommunicationService__ValueType;
typedef enum _Galaxy__Protocols__CommunicationService__SortMethod {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SORT_METHOD__SORT_METHOD_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SORT_METHOD__SORT_METHOD_ASCENDING = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SORT_METHOD__SORT_METHOD_DESCENDING = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SORT_METHOD)
} Galaxy__Protocols__CommunicationService__SortMethod;
typedef enum _Galaxy__Protocols__CommunicationService__DisplayType {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE__DISPLAY_TYPE_UNDEFINED = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE__DISPLAY_TYPE_NUMERIC = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE__DISPLAY_TYPE_TIME_SECONDS = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE__DISPLAY_TYPE_TIME_MILLISECONDS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE)
} Galaxy__Protocols__CommunicationService__DisplayType;
typedef enum _Galaxy__Protocols__CommunicationService__SynchronizationPolicy {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_POLICY__SYNCHRONIZATION_POLICY_FAIL_ON_CONFLICT = 0,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_POLICY__SYNCHRONIZATION_POLICY_PREFER_LOCAL = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_POLICY__SYNCHRONIZATION_POLICY_PREFER_REMOTE = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_POLICY__SYNCHRONIZATION_POLICY_SKIP_CONFLICTS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_POLICY)
} Galaxy__Protocols__CommunicationService__SynchronizationPolicy;
typedef enum _Galaxy__Protocols__CommunicationService__SynchronizationModifierFlag {
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG__SYNCHRONIZATION_MODIFIER_DO_NOT_PULL = 1,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG__SYNCHRONIZATION_MODIFIER_DO_NOT_PUSH = 2,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG__SYNCHRONIZATION_MODIFIER_RESTORE_MISSING = 4,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG__SYNCHRONIZATION_MODIFIER_DO_NOT_USE_DATABASE = 8,
  GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG__SYNCHRONIZATION_MODIFIER_VERIFY_LOCAL_DATA = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG)
} Galaxy__Protocols__CommunicationService__SynchronizationModifierFlag;

/* --- messages --- */

struct  Galaxy__Protocols__CommunicationService__LibraryInfoRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_bitness;
  Galaxy__Protocols__CommunicationService__Bitness bitness;
  protobuf_c_boolean has_compiler_type;
  Galaxy__Protocols__CommunicationService__CompilerType compiler_type;
  char *compiler_version;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__LIBRARY_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__library_info_request__descriptor) \
, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__BITNESS__BITNESS_UNDEFINED, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__COMPILER_TYPE__COMPILER_TYPE_UNDEFINED, NULL }


struct  Galaxy__Protocols__CommunicationService__LibraryInfoResponse
{
  ProtobufCMessage base;
  char *location;
  protobuf_c_boolean has_update_status;
  Galaxy__Protocols__CommunicationService__UpdateStatus update_status;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__LIBRARY_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__library_info_response__descriptor) \
, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_STATUS__UNKNOWN_UPDATE_STATUS }


struct  Galaxy__Protocols__CommunicationService__AuthInfoRequest
{
  ProtobufCMessage base;
  char *client_id;
  char *client_secret;
  protobuf_c_boolean has_platform_type;
  Galaxy__Protocols__CommunicationService__PlatformType platform_type;
  char *steam_ticket;
  protobuf_c_boolean has_game_pid;
  uint32_t game_pid;
  protobuf_c_boolean has_openid;
  protobuf_c_boolean openid;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__AUTH_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__auth_info_request__descriptor) \
, NULL, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__PLATFORM_TYPE__PLATFORM_TYPE_UNDEFINED, NULL, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__AuthInfoResponse
{
  ProtobufCMessage base;
  char *refresh_token;
  protobuf_c_boolean has_environment_type;
  Galaxy__Protocols__CommunicationService__EnvironmentType environment_type;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
  char *user_name;
  protobuf_c_boolean has_region;
  Galaxy__Protocols__CommunicationService__Region region;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__AUTH_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__auth_info_response__descriptor) \
, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ENVIRONMENT_TYPE__ENVIRONMENT_PRODUCTION, 0, 0, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__REGION__REGION_WORLD_WIDE }


struct  Galaxy__Protocols__CommunicationService__GetUserStatsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_stats_request__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_stat_id;
  uint64_t stat_id;
  char *key;
  protobuf_c_boolean has_value_type;
  Galaxy__Protocols__CommunicationService__ValueType value_type;
  protobuf_c_boolean has_float_value;
  float float_value;
  protobuf_c_boolean has_int_value;
  int32_t int_value;
  protobuf_c_boolean has_window_size;
  double window_size;
  protobuf_c_boolean has_float_default_value;
  float float_default_value;
  protobuf_c_boolean has_int_default_value;
  int32_t int_default_value;
  protobuf_c_boolean has_float_min_value;
  float float_min_value;
  protobuf_c_boolean has_int_min_value;
  int32_t int_min_value;
  protobuf_c_boolean has_float_max_value;
  float float_max_value;
  protobuf_c_boolean has_int_max_value;
  int32_t int_max_value;
  protobuf_c_boolean has_float_max_change;
  float float_max_change;
  protobuf_c_boolean has_int_max_change;
  int32_t int_max_change;
  protobuf_c_boolean has_increment_only;
  protobuf_c_boolean increment_only;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_STATS_RESPONSE__USER_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_stats_response__user_stat__descriptor) \
, 0, 0, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_UNDEFINED, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetUserStatsResponse
{
  ProtobufCMessage base;
  size_t n_user_stats;
  Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat **user_stats;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_stats_response__descriptor) \
, 0,NULL }


struct  Galaxy__Protocols__CommunicationService__UpdateUserStatRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_stat_id;
  uint64_t stat_id;
  protobuf_c_boolean has_value_type;
  Galaxy__Protocols__CommunicationService__ValueType value_type;
  protobuf_c_boolean has_float_value;
  float float_value;
  protobuf_c_boolean has_int_value;
  int32_t int_value;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UPDATE_USER_STAT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__update_user_stat_request__descriptor) \
, 0, 0, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_UNDEFINED, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_days;
  uint32_t days;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_GLOBAL_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_global_stats_request__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_stat_id;
  uint64_t stat_id;
  char *key;
  protobuf_c_boolean has_value_type;
  Galaxy__Protocols__CommunicationService__ValueType value_type;
  protobuf_c_boolean has_float_value;
  float float_value;
  protobuf_c_boolean has_int_value;
  int64_t int_value;
  protobuf_c_boolean has_window_size;
  double window_size;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_GLOBAL_STATS_RESPONSE__GLOBAL_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_global_stats_response__global_stat__descriptor) \
, 0, 0, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__VALUE_TYPE__VALUE_TYPE_UNDEFINED, 0, 0, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse
{
  ProtobufCMessage base;
  size_t n_global_stats;
  Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat **global_stats;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_GLOBAL_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_global_stats_response__descriptor) \
, 0,NULL }


struct  Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_ACHIEVEMENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_achievements_request__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement
{
  ProtobufCMessage base;
  protobuf_c_boolean has_achievement_id;
  uint64_t achievement_id;
  char *key;
  char *name;
  char *description;
  char *image_url_locked;
  char *image_url_unlocked;
  protobuf_c_boolean has_visible_while_locked;
  protobuf_c_boolean visible_while_locked;
  protobuf_c_boolean has_unlock_time;
  uint32_t unlock_time;
  protobuf_c_boolean has_rarity;
  float rarity;
  char *rarity_level_description;
  char *rarity_level_slug;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_ACHIEVEMENTS_RESPONSE__USER_ACHIEVEMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_achievements_response__user_achievement__descriptor) \
, 0, 0, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL, NULL }


struct  Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse
{
  ProtobufCMessage base;
  size_t n_user_achievements;
  Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement **user_achievements;
  char *language;
  char *achievements_mode;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_ACHIEVEMENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_achievements_response__descriptor) \
, 0,NULL, NULL, NULL }


struct  Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_achievement_id;
  uint64_t achievement_id;
  protobuf_c_boolean has_time;
  uint32_t time;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__UNLOCK_USER_ACHIEVEMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__unlock_user_achievement_request__descriptor) \
, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_achievement_id;
  uint64_t achievement_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__CLEAR_USER_ACHIEVEMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__clear_user_achievement_request__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition
{
  ProtobufCMessage base;
  protobuf_c_boolean has_leaderboard_id;
  uint64_t leaderboard_id;
  char *key;
  char *name;
  protobuf_c_boolean has_sort_method;
  Galaxy__Protocols__CommunicationService__SortMethod sort_method;
  protobuf_c_boolean has_display_type;
  Galaxy__Protocols__CommunicationService__DisplayType display_type;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARDS_RESPONSE__LEADERBOARD_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboards_response__leaderboard_definition__descriptor) \
, 0, 0, NULL, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SORT_METHOD__SORT_METHOD_UNDEFINED, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE__DISPLAY_TYPE_UNDEFINED }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse
{
  ProtobufCMessage base;
  size_t n_leaderboard_definitions;
  Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition **leaderboard_definitions;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARDS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboards_response__descriptor) \
, 0,NULL }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_leaderboard_id;
  uint64_t leaderboard_id;
  protobuf_c_boolean has_range_start;
  uint32_t range_start;
  protobuf_c_boolean has_range_end;
  uint32_t range_end;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARD_ENTRIES_GLOBAL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboard_entries_global_request__descriptor) \
, 0, 0, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_leaderboard_id;
  uint64_t leaderboard_id;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
  protobuf_c_boolean has_count_before;
  uint32_t count_before;
  protobuf_c_boolean has_count_after;
  uint32_t count_after;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARD_ENTRIES_AROUND_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_leaderboard_id;
  uint64_t leaderboard_id;
  size_t n_user_ids;
  uint64_t *user_ids;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARD_ENTRIES_FOR_USERS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__descriptor) \
, 0, 0, 0,NULL }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rank;
  uint32_t rank;
  protobuf_c_boolean has_score;
  uint32_t score;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
  protobuf_c_boolean has_details;
  ProtobufCBinaryData details;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARD_ENTRIES_RESPONSE__LEADERBOARD_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboard_entries_response__leaderboard_entry__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, {0,NULL} }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse
{
  ProtobufCMessage base;
  size_t n_leaderboard_entries;
  Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry **leaderboard_entries;
  protobuf_c_boolean has_leaderboard_entry_total_count;
  uint32_t leaderboard_entry_total_count;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARD_ENTRIES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboard_entries_response__descriptor) \
, 0,NULL, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest
{
  ProtobufCMessage base;
  uint64_t leaderboard_id;
  int32_t score;
  protobuf_c_boolean force_update;
  protobuf_c_boolean has_details;
  ProtobufCBinaryData details;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SET_LEADERBOARD_SCORE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__set_leaderboard_score_request__descriptor) \
, 0, 0, 0, 0, {0,NULL} }


struct  Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse
{
  ProtobufCMessage base;
  int32_t score;
  uint32_t old_rank;
  uint32_t new_rank;
  protobuf_c_boolean has_leaderboard_entry_total_count;
  uint32_t leaderboard_entry_total_count;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SET_LEADERBOARD_SCORE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__set_leaderboard_score_response__descriptor) \
, 0, 0, 0, 0, 0u }


struct  Galaxy__Protocols__CommunicationService__AuthStateChangeNotification
{
  ProtobufCMessage base;
  char *refresh_token;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__AUTH_STATE_CHANGE_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__auth_state_change_notification__descriptor) \
, NULL }


struct  Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest
{
  ProtobufCMessage base;
  size_t n_key;
  char **key;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_LEADERBOARDS_BY_KEY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_leaderboards_by_key_request__descriptor) \
, 0,NULL }


struct  Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest
{
  ProtobufCMessage base;
  char *key;
  char *name;
  protobuf_c_boolean has_sort_method;
  Galaxy__Protocols__CommunicationService__SortMethod sort_method;
  protobuf_c_boolean has_display_type;
  Galaxy__Protocols__CommunicationService__DisplayType display_type;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__CREATE_LEADERBOARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__create_leaderboard_request__descriptor) \
, NULL, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SORT_METHOD__SORT_METHOD_UNDEFINED, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__DISPLAY_TYPE__DISPLAY_TYPE_UNDEFINED }


struct  Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_leaderboard_id;
  uint64_t leaderboard_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__CREATE_LEADERBOARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__create_leaderboard_response__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_user_id;
  uint64_t user_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_TIME_PLAYED_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_time_played_request__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_time_played;
  uint32_t time_played;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__GET_USER_TIME_PLAYED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__get_user_time_played_response__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__ShareFileRequest
{
  ProtobufCMessage base;
  char *filename;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SHARE_FILE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__share_file_request__descriptor) \
, NULL }


struct  Galaxy__Protocols__CommunicationService__ShareFileResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_file_handle;
  uint64_t file_handle;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SHARE_FILE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__share_file_response__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_game_pid;
  uint32_t game_pid;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_OVERLAY_SESSION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__start_overlay_session_request__descriptor) \
, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__StartGameSessionRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_game_pid;
  uint32_t game_pid;
  protobuf_c_boolean has_overlay_support;
  Galaxy__Protocols__CommunicationService__StartGameSessionRequest__OverlaySupport overlay_support;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_GAME_SESSION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__start_game_session_request__descriptor) \
, 0, 0, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_GAME_SESSION_REQUEST__OVERLAY_SUPPORT__OVERLAY_SUPPORT_NOT_AVAILABLE }


struct  Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation
{
  ProtobufCMessage base;
  char *name;
  char *path;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_STORAGE_SYNCHRONIZATION_REQUEST__STORAGE_LOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__start_storage_synchronization_request__storage_location__descriptor) \
, NULL, NULL }


struct  Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest
{
  ProtobufCMessage base;
  size_t n_locations;
  Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation **locations;
  char *client_id;
  char *client_secret;
  protobuf_c_boolean has_installation_id;
  uint32_t installation_id;
  protobuf_c_boolean has_synchronization_policy;
  Galaxy__Protocols__CommunicationService__SynchronizationPolicy synchronization_policy;
  protobuf_c_boolean has_synchronization_modifier_flags;
  Galaxy__Protocols__CommunicationService__SynchronizationModifierFlag synchronization_modifier_flags;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__START_STORAGE_SYNCHRONIZATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__start_storage_synchronization_request__descriptor) \
, 0,NULL, NULL, NULL, 0, 0, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_POLICY__SYNCHRONIZATION_POLICY_FAIL_ON_CONFLICT, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__SYNCHRONIZATION_MODIFIER_FLAG__SYNCHRONIZATION_MODIFIER_DO_NOT_PULL }


struct  Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_progress_fraction_numerator;
  uint32_t progress_fraction_numerator;
  protobuf_c_boolean has_progress_fraction_denominator;
  uint32_t progress_fraction_denominator;
  char *client_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_PROGRESS_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__storage_synchronization_progress_notification__descriptor) \
, 0, 0, 0, 0, NULL }


struct  Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification
{
  ProtobufCMessage base;
  char *client_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_SUCCESS_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__storage_synchronization_success_notification__descriptor) \
, NULL }


struct  Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_local_storage_last_modified_time;
  uint32_t local_storage_last_modified_time;
  protobuf_c_boolean has_remote_storage_last_modified_time;
  uint32_t remote_storage_last_modified_time;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__CONFLICT_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__storage_synchronization_failure_notification__conflict_details__descriptor) \
, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_quota_bytes;
  uint32_t quota_bytes;
  protobuf_c_boolean has_quota_used_bytes;
  uint32_t quota_used_bytes;
  protobuf_c_boolean has_required_bytes;
  uint32_t required_bytes;
  protobuf_c_boolean has_required_uploads;
  uint32_t required_uploads;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__QUOTA_EXCEEDED_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__storage_synchronization_failure_notification__quota_exceeded_details__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification
{
  ProtobufCMessage base;
  char *client_id;
  protobuf_c_boolean has_failure_reason;
  Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__FailureReason failure_reason;
  Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails *conflict_details;
  Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails *quota_exceeded_details;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__storage_synchronization_failure_notification__descriptor) \
, NULL, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__STORAGE_SYNCHRONIZATION_FAILURE_NOTIFICATION__FAILURE_REASON__FAILURE_REASON_UNDEFINED, NULL, NULL }


struct  Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest
{
  ProtobufCMessage base;
  char *client_id;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ABORT_STORAGE_SYNCHRONIZATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__abort_storage_synchronization_request__descriptor) \
, NULL }


struct  Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_overlay_state;
  Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification__OverlayState overlay_state;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__overlay_state_change_notification__descriptor) \
, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__OVERLAY_STATE_CHANGE_NOTIFICATION__OVERLAY_STATE__OVERLAY_STATE_NOT_SUPPORTED }


struct  Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_environment_type;
  Galaxy__Protocols__CommunicationService__EnvironmentType environment_type;
  protobuf_c_boolean has_region;
  Galaxy__Protocols__CommunicationService__Region region;
};
#define GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__CONFIGURE_ENVIRONMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&galaxy__protocols__communication_service__configure_environment_request__descriptor) \
, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__ENVIRONMENT_TYPE__ENVIRONMENT_PRODUCTION, 0, GALAXY__PROTOCOLS__COMMUNICATION_SERVICE__REGION__REGION_WORLD_WIDE }


/* Galaxy__Protocols__CommunicationService__LibraryInfoRequest methods */
void   galaxy__protocols__communication_service__library_info_request__init
                     (Galaxy__Protocols__CommunicationService__LibraryInfoRequest         *message);
size_t galaxy__protocols__communication_service__library_info_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__LibraryInfoRequest   *message);
size_t galaxy__protocols__communication_service__library_info_request__pack
                     (const Galaxy__Protocols__CommunicationService__LibraryInfoRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__library_info_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__LibraryInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__LibraryInfoRequest *
       galaxy__protocols__communication_service__library_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__library_info_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__LibraryInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__LibraryInfoResponse methods */
void   galaxy__protocols__communication_service__library_info_response__init
                     (Galaxy__Protocols__CommunicationService__LibraryInfoResponse         *message);
size_t galaxy__protocols__communication_service__library_info_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__LibraryInfoResponse   *message);
size_t galaxy__protocols__communication_service__library_info_response__pack
                     (const Galaxy__Protocols__CommunicationService__LibraryInfoResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__library_info_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__LibraryInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__LibraryInfoResponse *
       galaxy__protocols__communication_service__library_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__library_info_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__LibraryInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__AuthInfoRequest methods */
void   galaxy__protocols__communication_service__auth_info_request__init
                     (Galaxy__Protocols__CommunicationService__AuthInfoRequest         *message);
size_t galaxy__protocols__communication_service__auth_info_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__AuthInfoRequest   *message);
size_t galaxy__protocols__communication_service__auth_info_request__pack
                     (const Galaxy__Protocols__CommunicationService__AuthInfoRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__auth_info_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__AuthInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__AuthInfoRequest *
       galaxy__protocols__communication_service__auth_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__auth_info_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__AuthInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__AuthInfoResponse methods */
void   galaxy__protocols__communication_service__auth_info_response__init
                     (Galaxy__Protocols__CommunicationService__AuthInfoResponse         *message);
size_t galaxy__protocols__communication_service__auth_info_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__AuthInfoResponse   *message);
size_t galaxy__protocols__communication_service__auth_info_response__pack
                     (const Galaxy__Protocols__CommunicationService__AuthInfoResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__auth_info_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__AuthInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__AuthInfoResponse *
       galaxy__protocols__communication_service__auth_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__auth_info_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__AuthInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetUserStatsRequest methods */
void   galaxy__protocols__communication_service__get_user_stats_request__init
                     (Galaxy__Protocols__CommunicationService__GetUserStatsRequest         *message);
size_t galaxy__protocols__communication_service__get_user_stats_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetUserStatsRequest   *message);
size_t galaxy__protocols__communication_service__get_user_stats_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetUserStatsRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_user_stats_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetUserStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetUserStatsRequest *
       galaxy__protocols__communication_service__get_user_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_user_stats_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetUserStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat methods */
void   galaxy__protocols__communication_service__get_user_stats_response__user_stat__init
                     (Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat         *message);
/* Galaxy__Protocols__CommunicationService__GetUserStatsResponse methods */
void   galaxy__protocols__communication_service__get_user_stats_response__init
                     (Galaxy__Protocols__CommunicationService__GetUserStatsResponse         *message);
size_t galaxy__protocols__communication_service__get_user_stats_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetUserStatsResponse   *message);
size_t galaxy__protocols__communication_service__get_user_stats_response__pack
                     (const Galaxy__Protocols__CommunicationService__GetUserStatsResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_user_stats_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetUserStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetUserStatsResponse *
       galaxy__protocols__communication_service__get_user_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_user_stats_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetUserStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__UpdateUserStatRequest methods */
void   galaxy__protocols__communication_service__update_user_stat_request__init
                     (Galaxy__Protocols__CommunicationService__UpdateUserStatRequest         *message);
size_t galaxy__protocols__communication_service__update_user_stat_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__UpdateUserStatRequest   *message);
size_t galaxy__protocols__communication_service__update_user_stat_request__pack
                     (const Galaxy__Protocols__CommunicationService__UpdateUserStatRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__update_user_stat_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__UpdateUserStatRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__UpdateUserStatRequest *
       galaxy__protocols__communication_service__update_user_stat_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__update_user_stat_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__UpdateUserStatRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest methods */
void   galaxy__protocols__communication_service__get_global_stats_request__init
                     (Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest         *message);
size_t galaxy__protocols__communication_service__get_global_stats_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest   *message);
size_t galaxy__protocols__communication_service__get_global_stats_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_global_stats_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest *
       galaxy__protocols__communication_service__get_global_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_global_stats_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat methods */
void   galaxy__protocols__communication_service__get_global_stats_response__global_stat__init
                     (Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat         *message);
/* Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse methods */
void   galaxy__protocols__communication_service__get_global_stats_response__init
                     (Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse         *message);
size_t galaxy__protocols__communication_service__get_global_stats_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse   *message);
size_t galaxy__protocols__communication_service__get_global_stats_response__pack
                     (const Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_global_stats_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse *
       galaxy__protocols__communication_service__get_global_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_global_stats_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest methods */
void   galaxy__protocols__communication_service__get_user_achievements_request__init
                     (Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest         *message);
size_t galaxy__protocols__communication_service__get_user_achievements_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest   *message);
size_t galaxy__protocols__communication_service__get_user_achievements_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_user_achievements_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest *
       galaxy__protocols__communication_service__get_user_achievements_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_user_achievements_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement methods */
void   galaxy__protocols__communication_service__get_user_achievements_response__user_achievement__init
                     (Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement         *message);
/* Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse methods */
void   galaxy__protocols__communication_service__get_user_achievements_response__init
                     (Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse         *message);
size_t galaxy__protocols__communication_service__get_user_achievements_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse   *message);
size_t galaxy__protocols__communication_service__get_user_achievements_response__pack
                     (const Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_user_achievements_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse *
       galaxy__protocols__communication_service__get_user_achievements_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_user_achievements_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest methods */
void   galaxy__protocols__communication_service__unlock_user_achievement_request__init
                     (Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest         *message);
size_t galaxy__protocols__communication_service__unlock_user_achievement_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest   *message);
size_t galaxy__protocols__communication_service__unlock_user_achievement_request__pack
                     (const Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__unlock_user_achievement_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest *
       galaxy__protocols__communication_service__unlock_user_achievement_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__unlock_user_achievement_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest methods */
void   galaxy__protocols__communication_service__clear_user_achievement_request__init
                     (Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest         *message);
size_t galaxy__protocols__communication_service__clear_user_achievement_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest   *message);
size_t galaxy__protocols__communication_service__clear_user_achievement_request__pack
                     (const Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__clear_user_achievement_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest *
       galaxy__protocols__communication_service__clear_user_achievement_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__clear_user_achievement_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition methods */
void   galaxy__protocols__communication_service__get_leaderboards_response__leaderboard_definition__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition         *message);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse methods */
void   galaxy__protocols__communication_service__get_leaderboards_response__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse         *message);
size_t galaxy__protocols__communication_service__get_leaderboards_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse   *message);
size_t galaxy__protocols__communication_service__get_leaderboards_response__pack
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_leaderboards_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse *
       galaxy__protocols__communication_service__get_leaderboards_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_leaderboards_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest methods */
void   galaxy__protocols__communication_service__get_leaderboard_entries_global_request__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest         *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_global_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest   *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_global_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_global_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest *
       galaxy__protocols__communication_service__get_leaderboard_entries_global_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_leaderboard_entries_global_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest methods */
void   galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest         *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest   *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest *
       galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest methods */
void   galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest         *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest   *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest *
       galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry methods */
void   galaxy__protocols__communication_service__get_leaderboard_entries_response__leaderboard_entry__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry         *message);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse methods */
void   galaxy__protocols__communication_service__get_leaderboard_entries_response__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse         *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse   *message);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_response__pack
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_leaderboard_entries_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse *
       galaxy__protocols__communication_service__get_leaderboard_entries_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_leaderboard_entries_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest methods */
void   galaxy__protocols__communication_service__set_leaderboard_score_request__init
                     (Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest         *message);
size_t galaxy__protocols__communication_service__set_leaderboard_score_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest   *message);
size_t galaxy__protocols__communication_service__set_leaderboard_score_request__pack
                     (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__set_leaderboard_score_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest *
       galaxy__protocols__communication_service__set_leaderboard_score_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__set_leaderboard_score_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse methods */
void   galaxy__protocols__communication_service__set_leaderboard_score_response__init
                     (Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse         *message);
size_t galaxy__protocols__communication_service__set_leaderboard_score_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse   *message);
size_t galaxy__protocols__communication_service__set_leaderboard_score_response__pack
                     (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__set_leaderboard_score_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse *
       galaxy__protocols__communication_service__set_leaderboard_score_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__set_leaderboard_score_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__AuthStateChangeNotification methods */
void   galaxy__protocols__communication_service__auth_state_change_notification__init
                     (Galaxy__Protocols__CommunicationService__AuthStateChangeNotification         *message);
size_t galaxy__protocols__communication_service__auth_state_change_notification__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__AuthStateChangeNotification   *message);
size_t galaxy__protocols__communication_service__auth_state_change_notification__pack
                     (const Galaxy__Protocols__CommunicationService__AuthStateChangeNotification   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__auth_state_change_notification__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__AuthStateChangeNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__AuthStateChangeNotification *
       galaxy__protocols__communication_service__auth_state_change_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__auth_state_change_notification__free_unpacked
                     (Galaxy__Protocols__CommunicationService__AuthStateChangeNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest methods */
void   galaxy__protocols__communication_service__get_leaderboards_by_key_request__init
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest         *message);
size_t galaxy__protocols__communication_service__get_leaderboards_by_key_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest   *message);
size_t galaxy__protocols__communication_service__get_leaderboards_by_key_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_leaderboards_by_key_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest *
       galaxy__protocols__communication_service__get_leaderboards_by_key_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_leaderboards_by_key_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest methods */
void   galaxy__protocols__communication_service__create_leaderboard_request__init
                     (Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest         *message);
size_t galaxy__protocols__communication_service__create_leaderboard_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest   *message);
size_t galaxy__protocols__communication_service__create_leaderboard_request__pack
                     (const Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__create_leaderboard_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest *
       galaxy__protocols__communication_service__create_leaderboard_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__create_leaderboard_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse methods */
void   galaxy__protocols__communication_service__create_leaderboard_response__init
                     (Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse         *message);
size_t galaxy__protocols__communication_service__create_leaderboard_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse   *message);
size_t galaxy__protocols__communication_service__create_leaderboard_response__pack
                     (const Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__create_leaderboard_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse *
       galaxy__protocols__communication_service__create_leaderboard_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__create_leaderboard_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest methods */
void   galaxy__protocols__communication_service__get_user_time_played_request__init
                     (Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest         *message);
size_t galaxy__protocols__communication_service__get_user_time_played_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest   *message);
size_t galaxy__protocols__communication_service__get_user_time_played_request__pack
                     (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_user_time_played_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest *
       galaxy__protocols__communication_service__get_user_time_played_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_user_time_played_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse methods */
void   galaxy__protocols__communication_service__get_user_time_played_response__init
                     (Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse         *message);
size_t galaxy__protocols__communication_service__get_user_time_played_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse   *message);
size_t galaxy__protocols__communication_service__get_user_time_played_response__pack
                     (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__get_user_time_played_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse *
       galaxy__protocols__communication_service__get_user_time_played_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__get_user_time_played_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__ShareFileRequest methods */
void   galaxy__protocols__communication_service__share_file_request__init
                     (Galaxy__Protocols__CommunicationService__ShareFileRequest         *message);
size_t galaxy__protocols__communication_service__share_file_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__ShareFileRequest   *message);
size_t galaxy__protocols__communication_service__share_file_request__pack
                     (const Galaxy__Protocols__CommunicationService__ShareFileRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__share_file_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__ShareFileRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__ShareFileRequest *
       galaxy__protocols__communication_service__share_file_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__share_file_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__ShareFileRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__ShareFileResponse methods */
void   galaxy__protocols__communication_service__share_file_response__init
                     (Galaxy__Protocols__CommunicationService__ShareFileResponse         *message);
size_t galaxy__protocols__communication_service__share_file_response__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__ShareFileResponse   *message);
size_t galaxy__protocols__communication_service__share_file_response__pack
                     (const Galaxy__Protocols__CommunicationService__ShareFileResponse   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__share_file_response__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__ShareFileResponse   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__ShareFileResponse *
       galaxy__protocols__communication_service__share_file_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__share_file_response__free_unpacked
                     (Galaxy__Protocols__CommunicationService__ShareFileResponse *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest methods */
void   galaxy__protocols__communication_service__start_overlay_session_request__init
                     (Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest         *message);
size_t galaxy__protocols__communication_service__start_overlay_session_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest   *message);
size_t galaxy__protocols__communication_service__start_overlay_session_request__pack
                     (const Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__start_overlay_session_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest *
       galaxy__protocols__communication_service__start_overlay_session_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__start_overlay_session_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__StartGameSessionRequest methods */
void   galaxy__protocols__communication_service__start_game_session_request__init
                     (Galaxy__Protocols__CommunicationService__StartGameSessionRequest         *message);
size_t galaxy__protocols__communication_service__start_game_session_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__StartGameSessionRequest   *message);
size_t galaxy__protocols__communication_service__start_game_session_request__pack
                     (const Galaxy__Protocols__CommunicationService__StartGameSessionRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__start_game_session_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__StartGameSessionRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__StartGameSessionRequest *
       galaxy__protocols__communication_service__start_game_session_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__start_game_session_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__StartGameSessionRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation methods */
void   galaxy__protocols__communication_service__start_storage_synchronization_request__storage_location__init
                     (Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation         *message);
/* Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest methods */
void   galaxy__protocols__communication_service__start_storage_synchronization_request__init
                     (Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest         *message);
size_t galaxy__protocols__communication_service__start_storage_synchronization_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest   *message);
size_t galaxy__protocols__communication_service__start_storage_synchronization_request__pack
                     (const Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__start_storage_synchronization_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest *
       galaxy__protocols__communication_service__start_storage_synchronization_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__start_storage_synchronization_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification methods */
void   galaxy__protocols__communication_service__storage_synchronization_progress_notification__init
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification         *message);
size_t galaxy__protocols__communication_service__storage_synchronization_progress_notification__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification   *message);
size_t galaxy__protocols__communication_service__storage_synchronization_progress_notification__pack
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__storage_synchronization_progress_notification__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification *
       galaxy__protocols__communication_service__storage_synchronization_progress_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__storage_synchronization_progress_notification__free_unpacked
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification methods */
void   galaxy__protocols__communication_service__storage_synchronization_success_notification__init
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification         *message);
size_t galaxy__protocols__communication_service__storage_synchronization_success_notification__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification   *message);
size_t galaxy__protocols__communication_service__storage_synchronization_success_notification__pack
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__storage_synchronization_success_notification__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification *
       galaxy__protocols__communication_service__storage_synchronization_success_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__storage_synchronization_success_notification__free_unpacked
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails methods */
void   galaxy__protocols__communication_service__storage_synchronization_failure_notification__conflict_details__init
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails         *message);
/* Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails methods */
void   galaxy__protocols__communication_service__storage_synchronization_failure_notification__quota_exceeded_details__init
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails         *message);
/* Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification methods */
void   galaxy__protocols__communication_service__storage_synchronization_failure_notification__init
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification         *message);
size_t galaxy__protocols__communication_service__storage_synchronization_failure_notification__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification   *message);
size_t galaxy__protocols__communication_service__storage_synchronization_failure_notification__pack
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__storage_synchronization_failure_notification__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification *
       galaxy__protocols__communication_service__storage_synchronization_failure_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__storage_synchronization_failure_notification__free_unpacked
                     (Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest methods */
void   galaxy__protocols__communication_service__abort_storage_synchronization_request__init
                     (Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest         *message);
size_t galaxy__protocols__communication_service__abort_storage_synchronization_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest   *message);
size_t galaxy__protocols__communication_service__abort_storage_synchronization_request__pack
                     (const Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__abort_storage_synchronization_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest *
       galaxy__protocols__communication_service__abort_storage_synchronization_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__abort_storage_synchronization_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification methods */
void   galaxy__protocols__communication_service__overlay_state_change_notification__init
                     (Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification         *message);
size_t galaxy__protocols__communication_service__overlay_state_change_notification__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification   *message);
size_t galaxy__protocols__communication_service__overlay_state_change_notification__pack
                     (const Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__overlay_state_change_notification__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification *
       galaxy__protocols__communication_service__overlay_state_change_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__overlay_state_change_notification__free_unpacked
                     (Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification *message,
                      ProtobufCAllocator *allocator);
/* Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest methods */
void   galaxy__protocols__communication_service__configure_environment_request__init
                     (Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest         *message);
size_t galaxy__protocols__communication_service__configure_environment_request__get_packed_size
                     (const Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest   *message);
size_t galaxy__protocols__communication_service__configure_environment_request__pack
                     (const Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest   *message,
                      uint8_t             *out);
size_t galaxy__protocols__communication_service__configure_environment_request__pack_to_buffer
                     (const Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest   *message,
                      ProtobufCBuffer     *buffer);
Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest *
       galaxy__protocols__communication_service__configure_environment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   galaxy__protocols__communication_service__configure_environment_request__free_unpacked
                     (Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Galaxy__Protocols__CommunicationService__LibraryInfoRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__LibraryInfoRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__LibraryInfoResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__LibraryInfoResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__AuthInfoRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__AuthInfoRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__AuthInfoResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__AuthInfoResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserStatsRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserStatsRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserStatsResponse__UserStat *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserStatsResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserStatsResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__UpdateUserStatRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__UpdateUserStatRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetGlobalStatsRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse__GlobalStat *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetGlobalStatsResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserAchievementsRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse__UserAchievement *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserAchievementsResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__UnlockUserAchievementRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__ClearUserAchievementRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse__LeaderboardDefinition *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardsResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesGlobalRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesAroundUserRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesForUsersRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse__LeaderboardEntry *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardEntriesResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__SetLeaderboardScoreResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__AuthStateChangeNotification_Closure)
                 (const Galaxy__Protocols__CommunicationService__AuthStateChangeNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetLeaderboardsByKeyRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__CreateLeaderboardRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__CreateLeaderboardResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__GetUserTimePlayedResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__ShareFileRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__ShareFileRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__ShareFileResponse_Closure)
                 (const Galaxy__Protocols__CommunicationService__ShareFileResponse *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__StartOverlaySessionRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StartGameSessionRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__StartGameSessionRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation_Closure)
                 (const Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest__StorageLocation *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__StartStorageSynchronizationRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification_Closure)
                 (const Galaxy__Protocols__CommunicationService__StorageSynchronizationProgressNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification_Closure)
                 (const Galaxy__Protocols__CommunicationService__StorageSynchronizationSuccessNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails_Closure)
                 (const Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__ConflictDetails *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails_Closure)
                 (const Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification__QuotaExceededDetails *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification_Closure)
                 (const Galaxy__Protocols__CommunicationService__StorageSynchronizationFailureNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__AbortStorageSynchronizationRequest *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification_Closure)
                 (const Galaxy__Protocols__CommunicationService__OverlayStateChangeNotification *message,
                  void *closure_data);
typedef void (*Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest_Closure)
                 (const Galaxy__Protocols__CommunicationService__ConfigureEnvironmentRequest *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__message_sort__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__message_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__bitness__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__compiler_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__platform_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__environment_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__region__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__update_status__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__value_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__sort_method__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__display_type__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__synchronization_policy__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__synchronization_modifier_flag__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__library_info_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__library_info_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__auth_info_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__auth_info_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_stats_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_stats_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_stats_response__user_stat__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__update_user_stat_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_global_stats_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_global_stats_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_global_stats_response__global_stat__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_achievements_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_achievements_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_achievements_response__user_achievement__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__unlock_user_achievement_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__clear_user_achievement_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboards_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboards_response__leaderboard_definition__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboard_entries_global_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboard_entries_around_user_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboard_entries_for_users_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboard_entries_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboard_entries_response__leaderboard_entry__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__set_leaderboard_score_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__set_leaderboard_score_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__auth_state_change_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_leaderboards_by_key_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__create_leaderboard_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__create_leaderboard_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_time_played_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__get_user_time_played_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__share_file_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__share_file_response__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__start_overlay_session_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__start_game_session_request__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__start_game_session_request__overlay_support__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__start_storage_synchronization_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__start_storage_synchronization_request__storage_location__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__storage_synchronization_progress_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__storage_synchronization_success_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__storage_synchronization_failure_notification__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__storage_synchronization_failure_notification__conflict_details__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__storage_synchronization_failure_notification__quota_exceeded_details__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__storage_synchronization_failure_notification__failure_reason__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__abort_storage_synchronization_request__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__overlay_state_change_notification__descriptor;
extern const ProtobufCEnumDescriptor    galaxy__protocols__communication_service__overlay_state_change_notification__overlay_state__descriptor;
extern const ProtobufCMessageDescriptor galaxy__protocols__communication_service__configure_environment_request__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_galaxy_2eprotocols_2ecommunication_5fservice_2eproto__INCLUDED */
